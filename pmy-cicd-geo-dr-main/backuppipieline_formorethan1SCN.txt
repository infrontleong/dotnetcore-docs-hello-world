# //use 2 service connection//
trigger:
- none

pool:
  vmImage: ubuntu-latest

stages:
- stage: terraform_demo
  jobs:

  # Terraform Implementation Job
  - job: tf_implementation
    displayName: 'Terraform Implementation'
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: terraform_install
      inputs:
        terraformVersion: 'latest'
        
    - task: TerraformTask@5
      displayName: terraform_init
      inputs:
        provider: 'azurerm'
        workingDirectory: 'sampleylrepo/environment/production'
        command: 'init'
        backendAzureRmUseEntraIdForAuthentication: false
        backendServiceArm: 'SCN-yukleongtest-002'   # EA connection
        backendAzureRmResourceGroupName: 'rg-terraform-principal-ea-002'
        backendAzureRmStorageAccountName: 'stgprintestea'
        backendAzureRmContainerName: 'container-principal-test-001'
        backendAzureRmKey: 'demoprincipal02.tfstate'

    - task: TerraformTask@5
      displayName: terraform_show
      inputs:
        provider: 'azurerm'
        workingDirectory: 'sampleylrepo/environment/production'
        command: 'show'
        outputTo: 'console'
        outputFormat: 'default'
        environmentServiceNameAzureRM: 'SCN-yukleongtest-002'  # EA connection

    - task: TerraformTask@5
      displayName: terraform_plan
      inputs:
        provider: 'azurerm'
        workingDirectory: 'sampleylrepo/environment/production'
        command: 'plan'
        environmentServiceNameAzureRM: 'SCN-yukleongtest-002'  # EA connection

    - task: TerraformTask@5
      displayName: terraform_apply
      inputs:
        provider: 'azurerm'
        workingDirectory: 'sampleylrepo/environment/production'
        command: 'apply'
        environmentServiceNameAzureRM: 'SCN-yukleongtest-002'  # EA connection

  # Restore SQL DB
  - job: restore_sql_db
    displayName: 'Restore SQL Database'
    condition: succeededOrFailed()
    dependsOn: tf_implementation
    steps:
    - task: AzureCLI@2
      displayName: Run restore SQL database sh script
      inputs:
        azureSubscription: 'SCN-yukleongtest-001'  # SEA connection
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: 'sampleylrepo/environment/production/bash language/restoredatabase.sh'

  # Failover Storage Account
  - job: failover_storage
    displayName: 'Failover Storage Account'
    condition: succeededOrFailed()
    dependsOn: restore_sql_db
    steps:
    - task: AzureCLI@2
      displayName: Run restore failover storage account sh script
      inputs:
        azureSubscription: 'SCN-yukleongtest-001'  # SEA connection
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: 'sampleylrepo/environment/production/bash language/failoverstorageaccount.sh'


  Restore VM
  - job: restore_vm
    displayName: 'Restore VM'
    condition: succeededOrFailed()
    steps:
    - task: AzureCLI@2
      displayName: Run restore VM sh script
      inputs:
        azureSubscription: 'SCN-yukleongtest-001'  # SEA connection
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: 'sampleylrepo/environment/production/bash language/restorevm.sh'